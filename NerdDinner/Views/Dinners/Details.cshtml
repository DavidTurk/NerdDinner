@using System.Web.Mvc.Ajax
@model NerdDinner.Models.Dinner

@{
    ViewBag.Title = "Details";
}

@section scripts{
    <script src="~/Scripts/jquery-2.2.0.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
    <script type="text/javascript">

        $(document).ready(function() {
            initialize();
        });

        function initialize() {
            var mapOptions = {
                center: new window.google.maps.LatLng(@Html.DisplayFor(model => model.Latitude), @Html.DisplayFor(model => model.Longitude)),
                zoom: 12,
                mapTypeId: window.google.maps.MapTypeId.ROADMAP
            };
            var map = new window.google.maps.Map(document.getElementById("map_canvas"),
                mapOptions);
            // create a marker
            var latlng = new window.google.maps.LatLng(@Html.DisplayFor(model => model.Latitude), @Html.DisplayFor(model => model.Longitude));
            var marker = new window.google.maps.Marker({
                position: latlng,
                map: map,
                title: 'Dinner @Html.DisplayFor(model => model.Title)'
            });

            window.google.maps.event.addListener(map, 'click', function(e) {
                deleteMarkers();
            });
            window.google.maps.event.addListener(map, 'click', function(e) {
                placeMarker(e.latLng, map);
            });

            function deleteMarkers() {
                //TODO Fix the delete
                //clearMarkers();
                //markers = [];
            }

            function placeMarker(position, map) {

                var marker = new window.google.maps.Marker({
                    position: position,
                    map: map
                });  
                map.panTo(position);
            }
        }
    </script>
}

<h2>Details</h2>
<h4>Dinner - @Html.DisplayFor(model => model.Title) </h4>
<hr />
<div class="container">
    <div class="row">
        <div class="col-xs-4">
            <p>
                <strong>When: </strong> @Html.DisplayFor(model => model.EventDate)
            </p>
            <p>
                <strong>Where: </strong> @Html.DisplayFor(model => model.Address)
            </p>
            <p>
                <strong>Description: </strong> @Html.DisplayFor(model => model.Description)
            </p>
            <p>
                <strong>Organizer: </strong> @Html.DisplayFor(model => model.HostedBy) (@Html.DisplayFor(model => model.ContactPhone))
            </p>

            @if (Request.IsAuthenticated)
            {
                if (Model.IsUserRegistered(Context.User.Identity.Name))
                {

                    <p class="text-success">You are registered for this event!</p>

                }
                else
                {

                    <p class="text-success" id="RSVPMessageBlock">
                        @Ajax.ActionLink("RSVP for this event",
                            "Register",
                            "RSVP",
                            new {id = Model.DinnerID},
                            new AjaxOptions {UpdateTargetId = "RSVPMessageBlock", HttpMethod = "Post"})
                    </p>

                }

            }
            else
            {

                @Html.Raw("You must register to RSVP for this dinner.")

            }

            <p>
                @if (Model.IsHostedBy(Context.User.Identity.Name))
                {
                    @Html.ActionLink("Edit Dinner", "Edit", new {id = Model.DinnerID})
                    @Html.Raw(" | ")
                    @Html.ActionLink("Delete Dinner", "Delete", new {id = Model.DinnerID})
                    @Html.Raw(" | ")
                }
                @Html.ActionLink("Back to List", "Index")
            </p>
        </div>
        <div id="map_canvas" class="col-xs-8" style="width: 450px; height: 380px">
            
        </div>
    </div>
</div>
